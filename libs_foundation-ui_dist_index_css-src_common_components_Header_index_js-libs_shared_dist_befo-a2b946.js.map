{"version":3,"file":"libs_foundation-ui_dist_index_css-src_common_components_Header_index_js-libs_shared_dist_befo-a2b946.js","mappings":";AAeA;AACA;;;;;;AA2CA","sources":["webpack://@solflare/extension/../../libs/shared/dist/wallet/components/KeystoneQRConfirm/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst styled_1 = __importDefault(require(\"@emotion/styled\"));\nconst animated_qr_1 = require(\"@keystonehq/animated-qr\");\nconst bc_ur_registry_sol_1 = require(\"@keystonehq/bc-ur-registry-sol\");\nconst uuid_1 = require(\"uuid\");\nconst foundation_ui_1 = require(\"@solflare/foundation-ui\");\nconst context_1 = require(\"../../context\");\nconst QrContainer = styled_1.default.div `\n  min-width: ${(props) => `${props.size}px`};\n  min-height: ${(props) => `${props.size}px`};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst KeystoneQRConfirm = ({ onCancel, isExtension, title }) => {\n    const { t } = (0, react_i18next_1.useTranslation)();\n    const { keystoneSignRequest, wallet } = (0, context_1.useSolflareWallet)();\n    const [step, setStep] = (0, react_1.useState)('show_request');\n    const [cameraStatus, setCameraStatus] = (0, react_1.useState)('ready');\n    const [cameraError, setCameraError] = (0, react_1.useState)(null);\n    const handleVideoLoaded = (0, react_1.useCallback)((canPlay) => {\n        setCameraStatus(canPlay ? 'ready' : 'permission_needed');\n    }, []);\n    const handleScanSuccess = (0, react_1.useCallback)(({ cbor }) => {\n        const solSignature = bc_ur_registry_sol_1.SolSignature.fromCBOR(Buffer.from(cbor, 'hex'));\n        const requestId = (0, uuid_1.stringify)(solSignature.getRequestId());\n        if (requestId === keystoneSignRequest?.requestId) {\n            wallet.instance?.submitSignature(requestId, cbor);\n        }\n    }, [keystoneSignRequest?.requestId, wallet.instance]);\n    const handleScanFailure = (0, react_1.useCallback)((error) => {\n        if (error === animated_qr_1.QRCodeError.UNEXPECTED_QRCODE || error === animated_qr_1.QRCodeError.INVALID_QR_CODE) {\n            setCameraError('Please check your QR code');\n        }\n    }, []);\n    const handleCancel = (0, react_1.useCallback)(() => {\n        wallet.instance?.cancelSignRequest(keystoneSignRequest?.requestId);\n        onCancel?.();\n    }, [keystoneSignRequest?.requestId, onCancel, wallet.instance]);\n    (0, react_1.useEffect)(() => {\n        setStep('show_request');\n    }, [keystoneSignRequest?.cbor]);\n    if (step === 'show_request') {\n        return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(foundation_ui_1.PageContent, { children: [(0, jsx_runtime_1.jsx)(foundation_ui_1.PageTitle, { center: title || t('confirm_transaction_title') }), (0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { variant: 'textM', alignCenter: true, children: t('confirm_transaction_follow_keystone_steps') }), (0, jsx_runtime_1.jsx)(QrContainer, { size: isExtension ? 290 : 320, children: !!keystoneSignRequest?.cbor && ((0, jsx_runtime_1.jsx)(animated_qr_1.AnimatedQRCode, { cbor: keystoneSignRequest.cbor, type: 'sol-sign-request', options: { size: isExtension ? 290 : 320 } })) })] }, keystoneSignRequest?.requestId), (0, jsx_runtime_1.jsx)(foundation_ui_1.FooterActions, { children: (0, jsx_runtime_1.jsxs)(foundation_ui_1.ButtonGroup, { children: [(0, jsx_runtime_1.jsx)(foundation_ui_1.Button, { onClick: handleCancel, variant: 'secondary', children: t('action_cancel') }), (0, jsx_runtime_1.jsx)(foundation_ui_1.Button, { onClick: () => setStep('scan_signature'), children: t('action_next_step') })] }) })] }));\n    }\n    if (step === 'scan_signature') {\n        return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(foundation_ui_1.PageContent, { children: [(0, jsx_runtime_1.jsx)(foundation_ui_1.PageTitle, { center: title || t('confirm_transaction_title') }), (0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { variant: 'headingS', children: t('confirm_transaction_scan_qr_code') }), cameraStatus === 'permission_needed' && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { variant: 'headingS', alignCenter: true, children: t('onboard_keystone_title_1') }), (0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { variant: 'textM', alignCenter: true, children: t('onboard_keystone_description_1') }), (0, jsx_runtime_1.jsxs)(foundation_ui_1.Typography, { ariant: 'textM', alignCenter: true, children: [t('onboard_keystone_description_2'), ' ', (0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { component: 'a', target: '_blank', variant: 'textM', href: 'https://keyst.one/solflare', children: t('onboard_full_tutorial') })] })] })), (0, jsx_runtime_1.jsx)(QrContainer, { size: isExtension ? 290 : 320, children: (0, jsx_runtime_1.jsx)(animated_qr_1.AnimatedQRScanner, { purpose: animated_qr_1.Purpose.SOL_SIGN, handleScan: handleScanSuccess, handleError: handleScanFailure, videoLoaded: handleVideoLoaded, options: { width: isExtension ? 290 : 320 } }) }), cameraError && ((0, jsx_runtime_1.jsx)(foundation_ui_1.Typography, { variant: 'textM', alignCenter: true, children: cameraError }))] }, keystoneSignRequest?.requestId), (0, jsx_runtime_1.jsx)(foundation_ui_1.FooterActions, { children: (0, jsx_runtime_1.jsx)(foundation_ui_1.ButtonGroup, { children: (0, jsx_runtime_1.jsx)(foundation_ui_1.Button, { onClick: () => setStep('show_request'), variant: 'secondary', children: t('action_back') }) }) })] }));\n    }\n    return null;\n};\nexports.default = KeystoneQRConfirm;\n\n"],"names":[],"sourceRoot":""}